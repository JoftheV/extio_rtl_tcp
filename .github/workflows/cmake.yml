name: CMake

on:
  # Trigger the workflow on push or pull request - but only for the main branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-on-windows:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    # - uses: actions/checkout@v2

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Checkout submodules
      run: git submodule update --depth 1 --init --recursive

    # - name: Configure CMake
    #   # Use a bash shell so we can use the same syntax for environment variable
    #   # access regardless of the host operating system
    #   shell: bash
    #   working-directory: ${{runner.workspace}}
    #   # Note the current convention is to use the -S and -B options here to specify source
    #   # and build directories, but this is only available with CMake 3.13 and higher.
    #   # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
    #   # @todo:  ${{runner.workspace}}/build
    #   run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "Visual Studio 16 2019" -A Win32

    # - name: Build
    #   working-directory: ${{runner.workspace}}
    #   shell: bash
    #   # Execute the build.  You can specify a specific target with "--target <NAME>"
    #   run: cmake --build . --config $BUILD_TYPE

    # - name: Create Package
    #   shell: powershell
    #   working-directory: ${{runner.workspace}}
    #   # run: Compress-Archive -DestinationPath EXTIO.ZIP -LiteralPath ${{runner.workspace}}/build/ExtIO_sddc/Release/ExtIO_SDDC.dll,${{runner.workspace}}/build/unittest/libfftw3f-3.dll,README.md
    #   run: Compress-Archive -DestinationPath extio_rtl_tcp_src.zip -LiteralPath ${{runner.workspace}},README.md

    - name: package and upload
      uses: actions/upload-artifact@v2
      with:
        name: extio_rtl_tcp_src
        path: |
            ${{runner.workspace}}/extio_rtl_tcp


